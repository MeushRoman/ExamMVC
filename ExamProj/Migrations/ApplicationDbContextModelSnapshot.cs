// <auto-generated />
using System;
using ExamProj.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamProj.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExamProj.Entities.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AText");

                    b.Property<int?>("QuestionId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("ExamProj.Entities.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QText");

                    b.Property<int?>("QuestioningId");

                    b.Property<int>("RealAnswerId");

                    b.HasKey("Id");

                    b.HasIndex("QuestioningId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ExamProj.Entities.Models.Questioning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionID");

                    b.HasKey("Id");

                    b.ToTable("Questionings");
                });

            modelBuilder.Entity("ExamProj.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("UserQuestionHistoryId");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamProj.Entities.UserQuestionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("QuestioningId");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.HasIndex("QuestioningId");

                    b.HasIndex("UserID");

                    b.ToTable("UserQuestionHistories");
                });

            modelBuilder.Entity("ExamProj.Entities.Models.Answer", b =>
                {
                    b.HasOne("ExamProj.Entities.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("ExamProj.Entities.Models.Question", b =>
                {
                    b.HasOne("ExamProj.Entities.Models.Questioning")
                        .WithMany("Questions")
                        .HasForeignKey("QuestioningId");
                });

            modelBuilder.Entity("ExamProj.Entities.UserQuestionHistory", b =>
                {
                    b.HasOne("ExamProj.Entities.Models.Questioning", "Questioning")
                        .WithMany()
                        .HasForeignKey("QuestioningId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExamProj.Entities.Models.User", "User")
                        .WithMany("UserQuestionHistory")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
